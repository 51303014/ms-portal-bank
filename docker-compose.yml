version: '3.8'
services:
  service:
    build: .
    container_name: portal
    hostname: portal
    ports:
      - 3000:3000
    networks:
      - app-network
    volumes:
      - ./src/:/app/src/
    restart: unless-stopped
    env_file: .env
    environment:
        APP_NAME: ${APP_NAME}
        APP_ENV: ${APP_ENV}
        APP_MODE: ${APP_MODE}
        APP_LANGUAGE: ${APP_LANGUAGE}
        APP_TZ: ${APP_TZ}
        APP_HOST: ${APP_HOST}
        APP_PORT: ${APP_PORT}
        APP_VERSIONING: ${APP_VERSIONING}
        APP_DEBUG: ${APP_DEBUG}
        APP_HTTP_ON: ${APP_HTTP_ON}
        APP_TASK_ON: ${APP_TASK_ON}
        DATABASE_HOST: ${DATABASE_HOST}
        DATABASE_NAME: ${DATABASE_NAME}
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_DEBUG: ${DATABASE_DEBUG}
        DATABASE_OPTIONS: ${DATABASE_OPTIONS}
        AUTH_JWT_ACCESS_TOKEN_SECRET_KEY: ${AUTH_JWT_ACCESS_TOKEN_SECRET_KEY}
        AUTH_JWT_REFRESH_TOKEN_SECRET_KEY: ${AUTH_JWT_REFRESH_TOKEN_SECRET_KEY}
        AUTH_BASIC_TOKEN_CLIENT_ID: ${AUTH_BASIC_TOKEN_CLIENT_ID}
        AUTH_BASIC_TOKEN_CLIENT_SECRET: ${AUTH_BASIC_TOKEN_CLIENT_SECRET}
        AWS_CREDENTIAL_KEY: ${AWS_CREDENTIAL_KEY}
        AWS_CREDENTIAL_SECRET: ${AWS_CREDENTIAL_SECRET}
        AWS_S3_REGION: ${AWS_S3_REGION}
        AWS_S3_BUCKET: ${AWS_S3_BUCKET}
    depends_on:
      - mongodb
  mongodb:
    image: mongo:latest
    container_name: mongo
    hostname: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: portal
      MONGO_INITDB_ROOT_PASSWORD: 12345678x@X
      MONGO_INITDB_DATABASE: portal
    volumes:
      - dbdata:/data/db
    restart: unless-stopped
    networks:
      - app-network
networks:
  app-network:
    name: app-network
    driver: bridge
volumes:
  dbdata:
